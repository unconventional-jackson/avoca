version: "3.9"

services:
  avoca-api-service:
    build:
      context: ./api-service
      dockerfile: Dockerfile.local
    ports:
      - "4000:4000"
    volumes:
      - ./api-service:/app # Mount for hot-reloading
      - /app/node_modules # Exclude node_modules from mounting
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - ENV=local
      - AWS_PROFILE
      - AWS_SESSION_TOKEN
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
    depends_on:
      - avoca-database-service

  avoca-calls-service:
    build:
      context: ./calls-service
      dockerfile: Dockerfile.local
    ports:
      - "8080:8080"
    volumes:
      - ./calls-service:/app # Mount for hot-reloading
      - /app/node_modules # Exclude node_modules from mounting
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - ENV=local
      - AWS_PROFILE
      - AWS_SESSION_TOKEN
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
    depends_on:
      - avoca-api-service

  # avoca-frontend-service:
  #   build:
  #     context: ./frontend-service
  #     dockerfile: Dockerfile.local
  #   ports:
  #     - "5173:5173"
  #   volumes:
  #     - ./frontend-service/src:/app/src # Mount for hot-reloading
  #     # - /app/node_modules # Exclude node_modules from mounting
  #     # - /app/node_modules # Exclude node_modules from mounting
  #     # - frontend_service_node_modules:/app/node_modules
  #   environment:
  #     NODE_ENV: ${NODE_ENV:-development}
  #     ENV: local

  avoca-database-service:
    image: postgres:15 # Use the latest stable version or your preferred version
    ports:
      - "5432:5432" # Maps PostgreSQL's default port
    environment:
      POSTGRES_USER: local_user
      POSTGRES_PASSWORD: YourStrong!Passw0rd
      POSTGRES_DB: local_database
    volumes:
      - postgres-data:/var/lib/postgresql/data # Persist data locally
    healthcheck:
      test:
        ["CMD-SHELL", "bash -c 'exec 6<>/dev/tcp/localhost/5432 && echo OK'"]
      interval: 10s
      timeout: 5s
      retries: 10

  avoca-migration-service:
    build:
      context: ./database-service
      dockerfile: Dockerfile.local
    environment:
      POSTGRES_HOST: avoca-database-service
      POSTGRES_USER: local_user
      POSTGRES_PASSWORD: "YourStrong!Passw0rd"
      POSTGRES_DB: local_database
      POSTGRES_PORT: 5432
    depends_on:
      avoca-database-service:
        condition: service_healthy
    command:
      ["sh", "-c", "npm run migration:up:local && echo 'Migrations complete'"]

volumes:
  postgres-data:
    driver: local
  # frontend_service_node_modules:
  # api_service_node_modules:
