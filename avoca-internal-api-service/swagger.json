{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Avoca Internal API",
    "description": "Internal API for interacting with our Avoca customer support systems.",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },

  "paths": {
    "/auth/signup": {
      "post": {
        "summary": "Sign up a new employee",
        "description": "Creates a new employee account and sends an email verification code.",
        "operationId": "signUp",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthSignUpRequestBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Employee created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Employee created. Verify your email."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ErrorResponse",
            "description": "Bad request - missing or invalid data"
          },
          "500": {
            "$ref": "#/components/responses/ErrorResponse",
            "description": "Internal server error"
          }
        }
      }
    },
    "/auth/signin": {
      "post": {
        "summary": "Sign in a employee",
        "description": "Authenticates a employee and provides access and refresh tokens if successful.",
        "operationId": "signIn",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthSignInRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Sign-in successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Sign-in successful"
                    },
                    "employee": { "$ref": "#/components/schemas/AuthUser" }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ErrorResponse",
            "description": "Bad request - missing or invalid data"
          },
          "401": {
            "$ref": "#/components/responses/ErrorResponse",
            "description": "Unauthorized - invalid credentials or unverified email"
          },
          "404": {
            "$ref": "#/components/responses/ErrorResponse",
            "description": "Employee not found"
          },
          "500": {
            "$ref": "#/components/responses/ErrorResponse",
            "description": "Internal server error"
          }
        }
      }
    },
    "/auth/verify-email": {
      "post": {
        "summary": "Verify employee email",
        "description": "Verifies a employee's email address with a TOTP verification code, updating the email verification status.",
        "operationId": "verifyEmail",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthVerifyEmailRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Email verified successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Email verified successfully."
                    },
                    "employee": { "$ref": "#/components/schemas/AuthUser" }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ErrorResponse",
            "description": "Bad request - missing or invalid data"
          },
          "404": {
            "$ref": "#/components/responses/ErrorResponse",
            "description": "Employee not found"
          },
          "500": {
            "$ref": "#/components/responses/ErrorResponse",
            "description": "Internal server error"
          }
        }
      }
    },
    "/auth/forgot-password": {
      "post": {
        "summary": "Request password reset token",
        "description": "Sends a password reset token to the employee's email if the email is registered.",
        "operationId": "forgotPassword",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthForgotPasswordRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset token sent",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Password reset token sent"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ErrorResponse",
            "description": "Bad request - missing email"
          },
          "404": {
            "$ref": "#/components/responses/ErrorResponse",
            "description": "Employee not found"
          },
          "500": {
            "$ref": "#/components/responses/ErrorResponse",
            "description": "Internal server error"
          }
        }
      }
    },
    "/auth/reset-password": {
      "post": {
        "summary": "Reset employee password",
        "description": "Resets a employee's password using a provided token and new password.",
        "operationId": "resetPassword",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthResetPasswordBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Password updated"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ErrorResponse",
            "description": "Bad request - missing or invalid fields"
          },
          "404": {
            "$ref": "#/components/responses/ErrorResponse",
            "description": "Employee not found"
          },
          "500": {
            "$ref": "#/components/responses/ErrorResponse",
            "description": "Internal server error"
          }
        }
      }
    },
    "/auth/change-password": {
      "post": {
        "summary": "Change employee password",
        "description": "Changes a employee's password by verifying the current password.",
        "operationId": "changePassword",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthChangePasswordRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Password updated"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ErrorResponse",
            "description": "Bad request - missing or invalid fields"
          },
          "500": {
            "$ref": "#/components/responses/ErrorResponse",
            "description": "Internal server error"
          }
        }
      }
    },
    "/auth/totp/setup": {
      "post": {
        "summary": "Setup TOTP for employee",
        "description": "Generates a TOTP secret and returns the otpauth URL for configuring TOTP on a employee account.",
        "operationId": "totpSetup",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthTOTPSetupRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "TOTP setup URL generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "otpauth_url": {
                      "type": "string",
                      "description": "URL for configuring TOTP in a compatible app"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ErrorResponse",
            "description": "Employee not found"
          },
          "500": {
            "$ref": "#/components/responses/ErrorResponse",
            "description": "Internal server error"
          }
        }
      }
    },
    "/auth/totp/verify": {
      "post": {
        "summary": "Verify TOTP for employee",
        "description": "Verifies a TOTP token for a employee. If the token is valid, enables TOTP for the employee and issues new access and refresh tokens.",
        "operationId": "totpVerify",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthTOTPVerifyRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "TOTP verified successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "TOTP verified successfully"
                    },
                    "employee": { "$ref": "#/components/schemas/AuthUser" }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ErrorResponse",
            "description": "Invalid TOTP token or missing data"
          },
          "404": {
            "$ref": "#/components/responses/ErrorResponse",
            "description": "Employee not found or TOTP not set up"
          },
          "500": {
            "$ref": "#/components/responses/ErrorResponse",
            "description": "Internal server error"
          }
        }
      }
    },
    "/auth/resend-verification": {
      "post": {
        "summary": "Resend email verification code",
        "description": "Resends a TOTP email verification code to the specified employee email, if the employee exists and has not verified their email.",
        "operationId": "resendVerification",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthResendVerificationRequestBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Verification email resent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Verification email resent. Verify your email."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ErrorResponse",
            "description": "Bad request - email is missing or email is already verified"
          },
          "404": {
            "$ref": "#/components/responses/ErrorResponse",
            "description": "Employee not found"
          },
          "500": {
            "$ref": "#/components/responses/ErrorResponse",
            "description": "Internal server error"
          }
        }
      }
    },
    "/auth/refresh-token": {
      "post": {
        "summary": "Verify a employee authentication request",
        "description": "Verifies a TOTP token for a standard employee. If the token is valid, enables TOTP for the employee and issues new access and refresh tokens.",
        "operationId": "refreshToken",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthRefreshTokenRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Access token refreshed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "access_token": { "type": "string" }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ErrorResponse",
            "description": "Invalid refresh token or missing data"
          },
          "401": {
            "$ref": "#/components/responses/ErrorResponse",
            "description": "Employee not authorized or refresh token expired"
          },
          "500": {
            "$ref": "#/components/responses/ErrorResponse",
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "responses": {
      "ErrorResponse": {
        "description": "Error response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Detailed error message"
                }
              },
              "required": ["error"],
              "additionalProperties": false,
              "example": {
                "error": "Detailed error message",
                "message": "Error message"
              }
            }
          }
        }
      }
    },
    "schemas": {
      "AuthRefreshTokenRequestBody": {
        "type": "object",
        "description": "Request body for refreshing a token, to be used by all employees",
        "properties": {
          "refresh_token": {
            "type": "string",
            "description": "The refresh token"
          }
        },
        "required": ["refresh_token"]
      },
      "AuthSignUpRequestBody": {
        "type": "object",
        "description": "Request body for signing up a employee, only to be used by admin employees or operator employees",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "The employee's email address"
          },
          "password": {
            "type": "string",
            "description": "The employee's password"
          }
        },
        "required": ["email", "password"]
      },
      "AuthSignInRequestBody": {
        "type": "object",
        "description": "Request body for signing in a employee, only to be used by admin employees or operator employees",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "The employee's email address"
          },
          "password": {
            "type": "string",
            "description": "The employee's password"
          }
        },
        "required": ["email", "password"]
      },
      "AuthUser": {
        "type": "object",
        "properties": {
          "employee_id": {
            "type": "string",
            "description": "The unique ID of the employee"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "The employee's email address"
          },
          "last_active_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The last time the employee was active"
          },
          "access_token": {
            "type": "string",
            "description": "JWT access token for employee authentication",
            "nullable": true
          },
          "refresh_token": {
            "type": "string",
            "description": "JWT refresh token for employee session renewal",
            "nullable": true
          },
          "auth_email_verified": {
            "type": "boolean",
            "description": "Indicates if the email is verified",
            "nullable": true
          },
          "auth_totp_verified_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Timestamp of the last TOTP verification"
          },
          "auth_totp_enabled": {
            "type": "boolean",
            "nullable": true,
            "description": "Indicates if TOTP is enabled for the employee"
          }
        }
      },
      "AuthVerifyEmailRequestBody": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "The admin or operator employee's email address"
          },
          "token": {
            "type": "string",
            "description": "TOTP verification code sent to the employee's email"
          }
        },
        "required": ["email", "token"]
      },
      "AuthResendVerificationRequestBody": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "The email address of the employee requesting the verification code."
          }
        },
        "required": ["email"]
      },
      "AuthForgotPasswordRequestBody": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "The email address of the employee requesting the password reset token."
          }
        },
        "required": ["email"]
      },
      "AuthResetPasswordBody": {
        "type": "object",
        "properties": {
          "new_password": {
            "type": "string",
            "description": "The employee's new password"
          },
          "token": {
            "type": "string",
            "description": "The reset password token sent to the employee's email"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "The email address of the employee (optional if employee_id is provided in the session)"
          }
        },
        "required": ["new_password", "token"]
      },
      "AuthChangePasswordRequestBody": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "The email address of the employee"
          },
          "current_password": {
            "type": "string",
            "description": "The employee's current password"
          },
          "new_password": {
            "type": "string",
            "description": "The employee's new password"
          }
        },
        "required": ["email", "current_password", "new_password"]
      },
      "AuthTOTPSetupRequestBody": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email address of the employee for whom TOTP is being set up"
          }
        },
        "required": ["email"]
      },
      "AuthTOTPVerifyRequestBody": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email address of the employee verifying TOTP"
          },
          "token": {
            "type": "string",
            "description": "The TOTP token to verify"
          }
        },
        "required": ["email", "token"]
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "A brief error message"
          },
          "message": {
            "type": "string",
            "description": "A detailed error message"
          }
        },
        "required": ["error"],
        "additionalProperties": false
      }
    }
  }
}
